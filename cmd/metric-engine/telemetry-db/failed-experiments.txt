
The purpose of this doc is to document a few experimental sql table designs that did *NOT* work out, and why.


		//================================================================================================================
		//
		// For reference only from here down: different experiments to see if we can use constant memory to output reports
		//
		//================================================================================================================

		// This looks ugly as heck, but so far it's the thing that scales best. It still doesn't stream out, it uses increasing memory depending on the number of rows
		{"Create the Redfish Metric Report", `
				CREATE VIEW IF NOT EXISTS MetricReport_experiment as
				select
					MR.Name as ReportName,
					'/redfish/v1/TelemetryService/MetricReports/' || MR.Name as '@odata.id',
					('{' ||
							' "@odata.type": "#MetricReport.v1_2_0.MetricReport",' ||
							' "@odata.context": "/redfish/v1/$metadata#MetricReport.MetricReport",' ||
							' "@odata.id": "/redfish/v1/TelemetryService/MetricReports/' || MR.Name || '",' ||
							' "Id": "' || MR.Name || '",' ||
							' "Name": "' || MR.Name || ' Metric Report",' ||
							' "ReportSequence": ' || Sequence || ',' ||
							' "Timestamp": ' || strftime('"%Y-%m-%dT%H:%M:%f"', MR.ReportTimestamp/1000000000.0, 'unixepoch') || ', ' ||
							' "MetricReportDefinition": {"@odata.id": "/redfish/v1/TelemetryService/MetricReportDefinitions/' || MRD.Name || '"}, ' ||
							' "MetricValues": [') as JSON
				from MetricReport as MR
				inner join MetricReportDefinition as MRD on MR.ReportDefinitionID = MRD.ID
				UNION ALL
				select
					MR.Name as ReportName,
					'/redfish/v1/TelemetryService/MetricReports/' || MR.Name as '@odata.id',
					(
							select group_concat(JSON)
							from MetricValueByReport_JSON as MVRJ
							where MVRJ.MRDID=MR.ReportDefinitionID
                and ( MVRJ.Timestamp >= MR.StartTimestamp OR MR.StartTimestamp is NULL )
								and ( MVRJ.Timestamp <= MR.EndTimestamp OR MR.EndTimestamp is NULL )
					) as JSON
				from MetricReport as MR
				inner join MetricReportDefinition as MRD on MR.ReportDefinitionID = MRD.ID
				UNION ALL
				select
					MR.Name as ReportName,
					'/redfish/v1/TelemetryService/MetricReports/' || MR.Name as '@odata.id',
					('], "MetricValues@odata.count": ')
				from MetricReport as MR
				inner join MetricReportDefinition as MRD on MR.ReportDefinitionID = MRD.ID
				UNION ALL
				select
					MR.Name as ReportName,
					'/redfish/v1/TelemetryService/MetricReports/' || MR.Name as '@odata.id',
					(select count(*)
							from MetricValueByReport_JSON as MVRJ
							where MVRJ.MRDID=MR.ReportDefinitionID
                and ( MVRJ.Timestamp >= MR.StartTimestamp OR MR.StartTimestamp is NULL )
								and ( MVRJ.Timestamp <= MR.EndTimestamp OR MR.EndTimestamp is NULL )) as JSON
				from MetricReport as MR
				inner join MetricReportDefinition as MRD on MR.ReportDefinitionID = MRD.ID
				UNION ALL
				select
					MR.Name as ReportName,
					'/redfish/v1/TelemetryService/MetricReports/' || MR.Name as '@odata.id',
					('}')
				from MetricReport as MR
				inner join MetricReportDefinition as MRD on MR.ReportDefinitionID = MRD.ID
			`},

		// These next two are known to blow up memory usage for large output. Included for comparison purposes only.
		// DONT USE THESE
		//   They are here for reference only to compare old/new
		{"UNscalable", `
					CREATE VIEW IF NOT EXISTS MetricReport_UNSCALABLE_VIEW as
							select
								MR.Name as 'Id',
								MR.Sequence as 'Sequence',
								MR.Name || ' Metric Report' as 'Name',
								strftime('%Y-%m-%dT%H:%M:%f', MR.ReportTimestamp/1000000000.0, 'unixepoch') as 'Timestamp',
								MRD.Name as 'MRDName',
								(
									select
									  json('[' || group_concat(json_object(
											'MetricId', MI.Name,
											'Timestamp', strftime('%Y-%m-%dT%H:%M:%f', MV.Timestamp/1000000000.0, 'unixepoch'),
											'MetricValue', MV.Value,
											'OEM', json_object(
												'Dell', json_object(
													'Context', MI.Context,
													'Label', MI.Label
												)
											))) || ']' )
									from MetricValue as MV
									inner join MetricInstance as MI on MV.InstanceID = MI.ID
									inner join MetricMeta as MM on MI.MetaID = MM.ID
									inner join ReportDefinitionToMetricMeta rd2mm on MM.ID = rd2mm.MetricMetaID
									where rd2mm.ReportDefinitionID = MRD.ID
										and ( MV.Timestamp >= MR.StartTimestamp OR MR.StartTimestamp is NULL )
										and ( MV.Timestamp <= MR.EndTimestamp OR MR.EndTimestamp is NULL )
								)	as 'MetricValues',
								(
									select count(*)
									from MetricValue as MV
									inner join MetricInstance as MI on MV.InstanceID = MI.ID
									inner join MetricMeta as MM on MI.MetaID = MM.ID
									inner join ReportDefinitionToMetricMeta rd2mm on MM.ID = rd2mm.MetricMetaID
									where rd2mm.ReportDefinitionID = MRD.ID
										and ( MV.Timestamp >= MR.StartTimestamp OR MR.StartTimestamp is NULL )
										and ( MV.Timestamp <= MR.EndTimestamp OR MR.EndTimestamp is NULL )
								) as 'MetricValues@odata.count'
							from MetricReport as MR
							INNER JOIN MetricReportDefinition as MRD ON MR.ReportDefinitionID = MRD.ID
			`},
		{"Unscalable redfish", `
				CREATE VIEW IF NOT EXISTS MetricReport_UNSCALABLE_Redfish as
						select json_object(
							'@odata.type','#MetricReport.v1_2_0.MetricReport',
							'@odata.context','/redfish/v1/$metadata#MetricReport.MetricReport',
							'@odata.id',  '/redfish/v1/TelemetryService/MetricReports/' || Id,
							'Id', Id,
							'Name',Name,
							'ReportSequence',Sequence,
							'Timestamp',Timestamp,
							'MetricReportDefinition', json_object('@odata.id','/redfish/v1/TelemetryService/MetricReportDefinitions/' || MRDName),
							'MetricValues', MetricValues,
							'MetricValues@odata.count', [MetricValues@odata.count]
							) as JSON,
								'/redfish/v1/TelemetryService/MetricReports/' || Id as '@odata.id' from MetricReport_UNSCALABLE_VIEW;
			`},

		/*
		 */

		/*
			select MR.Name as Name, MRD.AppendLimit as f, count(MV.Timestamp) as count, max(MV.Timestamp) as MaxTS, min(MV.Timestamp) as MinTS,
				(
					select ts from (
					select iMV.Timestamp as ts, row_number() over (order by iMV.Timestamp) as rn
					from MetricValue as iMV
					inner join MetricInstance as iMI on iMV.InstanceID = iMI.ID
					inner join MetricMeta as iMM on iMI.MetaID = iMM.ID
					inner join ReportDefinitionToMetricMeta ird2mm on iMM.ID = ird2mm.MetricMetaID
					inner join MetricReportDefinition as iMRD on ird2mm.ReportDefinitionID = iMRD.ID
					inner join MetricReport as iMR on iMRD.ID = iMR.ReportDefinitionID
					where iMR.Name = MR.Name
				) where rn = MRD.AppendLimit
				) as MaxALTS
			from MetricValue as MV
			inner join MetricInstance as MI on MV.InstanceID = MI.ID
			inner join MetricMeta as MM on MI.MetaID = MM.ID
			inner join ReportDefinitionToMetricMeta rd2mm on MM.ID = rd2mm.MetricMetaID
			inner join MetricReportDefinition as MRD on rd2mm.ReportDefinitionID = MRD.ID
			inner join MetricReport as MR on MRD.ID = MR.ReportDefinitionID
			group by MR.Name;
		*/


