main:
    server_name: "dell_msm"
    #options: "openbmc" | "dell_ec" | "mockup"
    #aggregatesearchpath: [ "/usr/share/sailfish/aggs/", "aggs/" ]

listen:
   - unix:sailfish.socket
   - pipeinput:sailfish.pipe
  # enable 8080 port only for testing, as per NCC audit it needs to be disabled on the build
   - http::8080
  #  enable pprof only for debuging, it causes increased memory consumption. If memprofilerate>0, it will use way more. It's set to 0 in the service file.
  # - pprof:localhost:9080
  # disable direct https listener, uncomment if needed for testing:
  # - https::8443

# new features needed:
#  - link_model
#  - model update fn
#
# View FN:
#   update etag
#   with formatter
#


views:
  "eventservice":
      "Logger": ["module", "eventservice"]
      "Models":
        "default": {
           "max_milliseconds_to_queue": "500",
           "max_events_to_queue": "20",
           "delivery_retry_attempts": "3",
           "delivery_retry_interval_seconds": "30",
           }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "'/redfish/v1/EventService'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "etag"
          "params": ["max_milliseconds_to_queue", "max_events_to_queue", "delivery_retry_attempts", "delivery_retry_interval_seconds"]
        - "fn": "WithAction"
          "params": {"name": "submit.test.event", "uri": "/Actions/EventService.SubmitTestEvent", "actionFunction": "submittestevent"}
        - "fn": "linkModel"
          "params": {"existing": "default", "linkname": "etag"}
      "Aggregate": "eventservice"

  "subscriptioncollection":
      "Logger": ["module", "eventservice"]
      "Models":
        "default": {"members": "array()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "eventsvc_uri + '/Subscriptions'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "stdFormatters"
          "params":
      "Aggregate": "subscriptioncollection"

  "subscription":
      "Logger": ["module", "eventservice"]
      "Models":
        "default": {
          "destination": "destination",
          "protocol":    "protocol",
          "context":     "context",
          "event_types": "eventTypes",
        }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "eventsvc_uri + '/Subscriptions/' + uuid"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "stdFormatters"
          "params":
      "Aggregate": "subscription"

