{ "name": "startup", "event_seq": -1, "data": {} }

//
// START - LEGACY MAPPINGS START HERE
//    We will import 'legacy' timeseries db data here. That way, when we import "newer" metrics manually, below, it will trigger report generation because the timestamps of those messages will be newer
//

{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "AggregationMetrics",   "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:AggregationMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "CPUMemMetrics",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:CPUMemMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "CPURegisters",         "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:CPURegisters"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "CPUSensor",            "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:CPUSensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "FCSensor",             "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:FCSensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "FPGASensor",           "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:FPGASensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "FanSensor",            "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:FanSensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "GPUMetrics",           "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:GPUMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "GPUStatistics",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:GPUStatistics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "MemorySensor",         "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:MemorySensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "NICSensor",            "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:NICSensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "NICStatistics",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:NICStatistics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "NVMeSMARTData",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:NVMeSMARTData"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "PSUMetrics",           "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:PSUMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "PowerMetrics",         "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:PowerMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "PowerStatistics",      "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:PowerStatistics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "Sensor",               "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:Sensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "StorageDiskSMARTData", "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:StorageDiskSMARTData"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "StorageSensor",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:StorageSensor"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "ThermalMetrics",       "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:ThermalMetrics"}]}}
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "ThermalSensor",        "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:ThermalSensor"}]}}

// DONE
// FYI:
//    PropertyPattern "Legacy:CUPS" will import metrics from the dump from the legacy DB
//    The MetricID will import from the sensor table dump
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "CUPS",                 "Enabled": true, "Type": "Periodic", "Period": 60, "Updates": "Overwrite", "SuppressDups": true , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [{"MetricID": "%", "PropertyPattern": "LEGACY:CUPS"}, {"MetricID": "IOUsage"}, {"MetricID": "MemoryUsage"}, {"MetricID": "SystemUsage"},{"MetricID": "CPUUsage"}]}}

//
// Debug reports
//
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-REPORT-wrap",          "Enabled": true, "Type": "OnRequest", "Updates": "AppendStopsWhenFull",  "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%"}] } }
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-REPORT-stop",          "Enabled": true, "Type": "OnRequest", "Updates": "AppendWrapsWhenFull",  "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%"}] } }
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-COLL-PERIODIC-NEW",    "Enabled": true, "Type": "Periodic",  "Period": 60, "Updates": "NewReport", "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%", "CollectionFunction": "Average", "CollectionDuration": 10}] } }
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-COLL-PERIODIC-OVW",    "Enabled": true, "Type": "Periodic",  "Period": 60, "Updates": "Overwrite", "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%", "CollectionFunction": "Average", "CollectionDuration": 10}] } }
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-REPORT-PERIODIC-wrap", "Enabled": true, "Type": "Periodic",  "Period": 60, "Updates": "AppendStopsWhenFull",  "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%"}] } }
{ "name": "UpdateMetricReportDefinitionEvent", "data": { "Name": "UBER-REPORT-PERIODIC-stop", "Enabled": true, "Type": "Periodic",  "Period": 60, "Updates": "AppendWrapsWhenFull",  "SuppressDups": false , "Actions": ["RedfishEvent", "LogToMetricReportsCollection"], "Metrics": [ {"MetricID":"%"}] } }

//
// Do a single import of legacy data
// { "name": "LegacyDatabaseEvent", "data": "import_all"}

//
// start timer to periodically import
// { "name": "LegacyDatabaseEvent", "data": "start_timed_import"}

//
// Import UDB data
// { "name": "UDBDatabaseEvent", "data": "import:Sensor"}

// synchonize and wait until everything finishes
{ "name": "startup", "Synchronous": true, "Barrier": true, "data": {} }
