#!/bin/sh

test_fmt() {
  hash gofmt 2>&- || { echo >&2 "Need to check that files are properly formatted prior to commit, but the required gofmt tool is not in PATH."; exit 1; }
  IFS='
  '
  for file in $(git diff --cached --name-only --diff-filter=ACM | grep '\.go$')
  do
    output=$(git cat-file -p :$file | gofmt -l 2>&1)
    if test $? -ne 0
    then
      output=$(echo "$output" | sed "s,<standard input>,$file,")
      syntaxerrors="${list}${output}\n"
    elif test -n "$output"
    then
      list="${list}${file}\n"
    fi
  done
  exitcode=0
  if test -n "$syntaxerrors"
  then
    echo -e "\n============ ERROR - COMMIT ABORTED - SYNTAX ERRORS ============" >&2
    echo -e "commit aborted because gofmt detected problems" >&2
    echo "gofmt found syntax errors:" >&2
    printf "$syntaxerrors"
    echo -e "\n" >&2
    exitcode=1
  fi
  if test -n "$list"
  then
    echo -e "\n============ ERROR - COMMIT ABORTED - FORMATTING ERRORS ============" >&2
    echo -e "commit aborted because gofmt detected problems" >&2
    echo "improperly formatted GO source files found. Run gofmt to fix the format or fix your editor settings to format (run gofmt -w and git add):" >&2
    printf "$list"
    echo -e "\n" >&2
    exitcode=1
  fi
  exit $exitcode
}

case "$1" in
  --about )
    echo "Check Go code formatting"
    ;;
  * )
    test_fmt
    ;;
esac
